/*class Solution {
    public String countAndSay(int n) {

        String result = "1"; 

        for (int i = 2; i <= n; i++) {
            result = count(result); // Update result with the count-and-say value
        }

        return result;
        
    }

    public String count(String s){

        
        int len = s.length();
        StringBuilder sb = new StringBuilder();
        for(int i=0;i<len;i++)
        {
            char ch1 = s.charAt(i);
            int count =0;
            for(int j=1;i+1<len;j++){
                char ch2=s.charAt(i+1);
                if(ch1==ch2){
                    count++;
                    
                }
                     
            }
            sb.append(count).append(ch1);
                     
        }
        return sb.toString();
    }
}*/
class Solution {
    public String countAndSay(int n) {
        String result = "1"; // Base case
        
        for (int i = 2; i <= n; i++) {
            result = count(result); // Update result with the count-and-say value
        }
        
        return result;
    }

    public String count(String s) {
        StringBuilder sb = new StringBuilder();
        int len = s.length();

        for (int i = 0; i < len; i++) {
            int count = 1;
            char ch = s.charAt(i);

            // Count the number of consecutive occurrences of ch
            while (i + 1 < len && s.charAt(i + 1) == ch) {
                count++;
                i++;
            }

            sb.append(count).append(ch); // Append the count and the character
        }

        return sb.toString();
    }
}
